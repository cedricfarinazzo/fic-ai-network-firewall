import requests
import json
import os
from tqdm import tqdm
import pyzipper

ZIP_PASSWORD = b'infected'
headers = { 'API-KEY': '' }

tags = [
        "32", "64",
        "elf", "exe", "msi", "dll", "apk",
        "intel", "arm",
        "xls", "xlsx", "xlsm",
        "doc", "docx", "docm",
        "zip", "rar", "7z",
        "pdf", "js", "vbs"
]

sha256_hash_list = []
total_size = 0


for tag in tags:
    data = {'query': 'get_taginfo', 'tag': tag, 'limit': 1000}
    response = requests.post('https://mb-api.abuse.ch/api/v1/', data=data, headers=headers, timeout=15)
    json_response = response.content.decode("utf-8", "ignore")
    json_response = json.loads(json_response)

    if json_response["query_status"] == 'no_results' or not json_response["data"]:
        continue

    found = 0
    for e in json_response["data"]:
        if e["sha256_hash"] not in sha256_hash_list:
            sha256_hash_list.append(e["sha256_hash"])
            total_size += e["file_size"]
            found += 1

    print(f"{tag}: Found {found} malwares")

print("total: ", len(sha256_hash_list))
print("file size: ", total_size)


for i in tqdm(range(len(sha256_hash_list))):
    h = sha256_hash_list[i]
    data = {
        'query': 'get_file',
        'sha256_hash': h,
    }
    response = requests.post('https://mb-api.abuse.ch/api/v1/', data=data, timeout=15, headers=headers, allow_redirects=True)

    if 'file_not_found' in response.text:
        print(f"{h}: file not found")
        continue
    else:
        open("/tmp/" + h + '.zip', 'wb+').write(response.content)
        with pyzipper.AESZipFile("/tmp/" + h +".zip") as zf:
            zf.pwd = ZIP_PASSWORD
            zf.extractall("dataset/")
        os.remove("/tmp/" + h + '.zip')
